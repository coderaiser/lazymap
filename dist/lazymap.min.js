!function(r){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.lazymap=r()}}(function(){return function r(e,n,t){function o(i,u){if(!n[i]){if(!e[i]){var a="function"==typeof require&&require;if(!u&&a)return a(i,!0);if(f)return f(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var l=n[i]={exports:{}};e[i][0].call(l.exports,function(r){var n=e[i][1][r];return o(n?n:r)},l,l.exports,r,e,n,t)}return n[i].exports}for(var f="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(r,e,n){"use strict";function t(r){if(Array.isArray(r)){for(var e=0,n=Array(r.length);e<r.length;e++)n[e]=r[e];return n}return Array.from(r)}function o(r){f(r);var e=i(arguments);return e.length>=r.length?r.apply(void 0,t(e)):function(){return o.apply(void 0,[r].concat(t(e),Array.prototype.slice.call(arguments)))}}function f(r){if("function"!=typeof r)throw Error("fn should be function!")}e.exports=o;var i=function(r){return[].slice.call(r,1)}},{}],lazymap:[function(r,e,n){"use strict";function t(r,e){if("function"!=typeof r)throw Error("fn should be a function!");if(!Array.isArray(e))throw Error("array should be an array!")}function o(r,e){var n,t;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:n=e.length,t=n+1;case 2:if(!--t){o.next=7;break}return o.next=5,r(e[n-t]);case 5:o.next=2;break;case 7:case"end":return o.stop()}},i[0],this)}function f(r,e){var n=[];for(e&&++e;--e;){var t=r.next(),o=t.done,f=t.value;if(o)break;n.push(f)}return n}var i=[o].map(regeneratorRuntime.mark),u=r("currify");e.exports=u(function(r,e){t(r,e);var n=o(r,e);return u(f,n)})},{currify:1}]},{},["lazymap"])("lazymap")});
